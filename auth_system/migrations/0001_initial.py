# Generated by Django 5.2 on 2025-08-18 07:55

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(blank=True, max_length=50, null=True)),
                ("email", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "email_type",
                    models.IntegerField(choices=[(1, "Enquiry Verification OTP")]),
                ),
                ("request_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Pending"),
                            (2, "Delivered"),
                            (3, "Failed"),
                            (4, "Verified"),
                            (5, "Expired"),
                            (6, "Cancelled"),
                        ]
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("response", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "auth_system_email_log",
            },
        ),
        migrations.CreateModel(
            name="ForgotPassword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField()),
                ("password_reset_token", models.CharField(max_length=255)),
                ("password_reset_expires", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "auth_system_forgot_passwords",
            },
        ),
        migrations.CreateModel(
            name="LoginFailAttempts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("ip", models.GenericIPAddressField(blank=True, null=True)),
                ("agent_browser", models.TextField(blank=True, null=True)),
                ("user_details", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "auth_system_login_fail_attempts",
            },
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=255)),
                ("otp_code", models.CharField(max_length=6)),
                (
                    "otp_type",
                    models.IntegerField(
                        choices=[
                            (1, "Customer Login"),
                            (2, "FD Login"),
                            (3, "Employee Login"),
                            (4, "Lead Verification"),
                        ]
                    ),
                ),
                ("request_id", models.CharField(max_length=200)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Pending"),
                            (2, "Delivered"),
                            (3, "Failed"),
                            (4, "Verified"),
                            (5, "Expired"),
                            (6, "Cancelled"),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expiry_at", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_system_otps",
            },
        ),
        migrations.CreateModel(
            name="PasswordAttemptLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip", models.GenericIPAddressField(blank=True, null=True)),
                ("agent_browser", models.TextField(blank=True, null=True)),
                ("user_details", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_system_password_attempt_logs",
            },
        ),
        migrations.CreateModel(
            name="SmsLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(blank=True, max_length=50, null=True)),
                ("mobile_number", models.CharField(max_length=15)),
                ("message", models.TextField()),
                (
                    "sms_type",
                    models.IntegerField(
                        choices=[
                            (1, "Customer Login OTP"),
                            (2, "FD Login OTP"),
                            (3, "Employee Login OTP"),
                            (4, "Lead Verification OTP"),
                        ]
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Pending"),
                            (2, "Delivered"),
                            (3, "Failed"),
                            (4, "Verified"),
                            (5, "Expired"),
                            (6, "Cancelled"),
                        ]
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("response", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "auth_system_sms_log",
            },
        ),
        migrations.CreateModel(
            name="TblUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                (
                    "mobile_number",
                    models.CharField(db_index=True, max_length=15, unique=True),
                ),
                ("employee_id", models.IntegerField(unique=True)),
                (
                    "employee_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("level", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_login", models.BooleanField(default=False)),
                ("two_step", models.BooleanField(default=False)),
                (
                    "login_attempt",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("last_activity", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.IntegerField(default=0)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "auth_system_user",
            },
        ),
        migrations.CreateModel(
            name="APILog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniqid", models.UUIDField(db_index=True, editable=False)),
                ("method", models.CharField(max_length=10)),
                ("endpoint", models.CharField(max_length=255)),
                ("request_data", models.JSONField(blank=True, null=True)),
                ("response_status", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="auth_system_apilogs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LastThreePasswords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_system_last_three_passwords",
            },
        ),
        migrations.CreateModel(
            name="BlackListedToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("token", "user")},
            },
        ),
        migrations.CreateModel(
            name="LoginSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "login_portal",
                    models.IntegerField(
                        choices=[
                            (1, "EMS"),
                            (2, "CMS"),
                            (3, "LEAD"),
                            (4, "DEDUP"),
                            (5, "CODE_OF_CONDUCT"),
                        ],
                        default=1,
                    ),
                ),
                ("token", models.CharField(max_length=1024, unique=True)),
                (
                    "session_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("login_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("logout_at", models.DateTimeField(blank=True, null=True)),
                ("expiry_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "agent_browser",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("request_headers", models.JSONField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_system_login_session",
                "ordering": ["-login_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "logout_at"],
                        name="auth_system_user_id_04142c_idx",
                    )
                ],
            },
        ),
    ]
